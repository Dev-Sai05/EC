https://docs.rocketsoftware.com/bundle/visualcobol_dg_100_html/page/GUID-07B61668-D77F-4C63-ABBC-15ED4ACE3E07.html


https://docs.rocketsoftware.com/bundle/visualcobol_dg2_100_html/page/GUID-CFC126BE-7402-4851-A0AE-1F33FC7A5681.html
 
https://docs.rocketsoftware.com/bundle/visualcobol_dg2_100_html/page/GUID-9720A165-00D4-4141-AA09-6ABF4803BA13.html
 
https://docs.rocketsoftware.com/bundle/visualcobol_dg2_100_html/page/GUID-3C495CA9-2B7A-4890-AC64-005545AED543.html
 
https://docs.rocketsoftware.com/bundle/visualcobol_dg2_100_html/page/GUID-F9751434-1614-4271-A1CD-2078CEC56D5E.html

https://docs.rocketsoftware.com/bundle/visualcobol_dg2_100_html/page/GUID-DE95786C-5792-45DF-9809-569536DDDE3B.html


package com.db;

import java.sql.Connection;
import java.sql.SQLException;
import com.zaxxer.hikari.HikariConfig;
import com.zaxxer.hikari.HikariDataSource;

public class DBPoolManager {
    private static HikariDataSource ds;

    static {
        HikariConfig config = new HikariConfig();
        config.setJdbcUrl("jdbc:oracle:thin:@localhost:1521:xe");  // Change this
        config.setUsername("your_user");
        config.setPassword("your_pass");
        config.setMaximumPoolSize(10);
        ds = new HikariDataSource(config);
    }

    public static Connection getConnection() throws SQLException {
        return ds.getConnection();
    }
}


class-id DBAccess.

       method-id Main static.
       local-storage section.
       01 conn object reference java.sql.Connection.
       01 stmt object reference java.sql.Statement.
       01 rs object reference java.sql.ResultSet.
       01 hasNext type boolean.
       01 result type string.
       procedure division.

           display "Getting connection from Java pool..."
           invoke com.db.DBPoolManager "getConnection" returning conn

           if conn not = null
               display "Connection successful!"

               invoke conn "createStatement" returning stmt
               invoke stmt "executeQuery" using "SELECT SYSDATE FROM DUAL" returning rs
               invoke rs "next" returning hasNext

               if hasNext
                   invoke rs "getString" using 1 returning result
                   display "DB Time: " result
               end-if

               invoke rs "close"
               invoke stmt "close"
               invoke conn "close"
           else
               display "Connection failed!"
           end-if

           goback.
       end method.
       end class.



class-id com.db.DBAccess.

       method-id Main static.
       local-storage section.
       01 conn object reference java.sql.Connection.
       01 stmt object reference java.sql.Statement.
       01 rs   object reference java.sql.ResultSet.
       01 hasNext type boolean.
       01 result type string.
       01 dbUrl    type string value "jdbc:oracle:thin:@localhost:1521:xe".
       01 dbUser   type string value "your_user".
       01 dbPass   type string value "your_password".

       procedure division.

           invoke java.lang.Class "forName" using "oracle.jdbc.OracleDriver"

           invoke java.sql.DriverManager "getConnection"
               using dbUrl dbUser dbPass
               returning conn

           if conn not = null
               display "Connection successful!"
               invoke conn "createStatement" returning stmt
               invoke stmt "executeQuery" using "SELECT SYSDATE FROM DUAL" returning rs
               invoke rs "next" returning hasNext
               if hasNext
                   invoke rs "getString" using 1 returning result
                   display "DB Time: " result
               end-if
               invoke rs "close"
               invoke stmt "close"
               invoke conn "close"
           else
               display "Connection failed!"
           end-if

           goback.
       end method.
       end class.

class-id com.db.DBAccess.

       method-id Main static.
       local-storage section.
       01 conn    object reference java.sql.Connection.
       01 stmt    object reference java.sql.Statement.
       01 rs      object reference java.sql.ResultSet.
       01 hasNext type boolean.
       01 result  type string.

       procedure division.

           display "Getting connection from Java pool..."

           *> Call static method getConnection from Java class
           invoke com.db.DBPoolManager "getConnection" returning conn

           if conn not = null
               display "Connection successful!"

               invoke conn "createStatement" returning stmt
               invoke stmt "executeQuery" using "SELECT SYSDATE FROM DUAL" returning rs

               invoke rs "next" returning hasNext
               if hasNext
                   invoke rs "getString" using 1 returning result
                   display "DB Time: " result
               end-if

               invoke rs "close"
               invoke stmt "close"
               invoke conn "close"
           else
               display "Connection failed!"
           end-if

           goback.
       end method.

       end class.


--------


package db;

import com.zaxxer.hikari.HikariConfig;
import com.zaxxer.hikari.HikariDataSource;

import java.sql.Connection;
import java.sql.SQLException;

public class DBPoolManager {
    private static HikariDataSource dataSource;

    static {
        HikariConfig config = new HikariConfig();
        config.setJdbcUrl("jdbc:mysql://localhost:3306/testdb"); // or Oracle JDBC URL
        config.setUsername("your_username");
        config.setPassword("your_password");
        config.setMaximumPoolSize(10);
        config.setDriverClassName("com.mysql.cj.jdbc.Driver"); // or oracle.jdbc.OracleDriver

        dataSource = new HikariDataSource(config);
    }

    public static Connection getConnection() throws SQLException {
        return dataSource.getConnection();
    }
}


class-id DBAccess.

       method-id Main static.
       local-storage section.
       01 conn object reference java.sql.Connection.
       01 stmt object reference java.sql.Statement.
       01 rs   object reference java.sql.ResultSet.
       01 sql  string.
       
       procedure division.
           invoke db.DBPoolManager "getConnection" returning conn
           
           if conn not = null
               display "Connected to DB from COBOL"
               set sql to "SELECT id, name FROM sample_table"
               invoke conn "createStatement" returning stmt
               invoke stmt "executeQuery" using sql returning rs

               perform until rs::"next" = false
                   display "ID: " rs::"getInt"(1)
                   display "Name: " rs::"getString"(2)
               end-perform

               invoke rs "close"
               invoke stmt "close"
               invoke conn "close"
           else
               display "Failed to get connection"
           end-if
           goback.
       end method Main.

       end class DBAccess.

___

program-id. DBACCESS.
       environment division.
       configuration section.
       repository.
           class java.sql.Connection
           class java.sql.Statement
           class java.sql.ResultSet
           class db.DBPoolManager.

       data division.
       working-storage section.
       01 conn object reference java.sql.Connection.
       01 stmt object reference java.sql.Statement.
       01 rs   object reference java.sql.ResultSet.
       01 sql  pic x(100) value "SELECT id, name FROM sample_table".

       procedure division.

           *> Get connection from DBPoolManager (Java)
           invokestatic db.DBPoolManager "getConnection"
               returning conn

           if conn not = null
               display "Connection Successful from COBOL"

               invoke conn "createStatement" returning stmt
               invoke stmt "executeQuery" using sql returning rs

               perform until rs::"next" = false
                   display "ID: " rs::"getInt"(1)
                   display "Name: " rs::"getString"(2)
               end-perform

               invoke rs "close"
               invoke stmt "close"
               invoke conn "close"
           else
               display "Failed to get connection"
           end-if

           goback.
       end program DBACCESS.
